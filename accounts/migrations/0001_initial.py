# Generated by Django 5.1.6 on 2025-03-01 10:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_id', models.IntegerField(blank=True, null=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('HR', 'HR'), ('Manager', 'Manager'), ('Employee', 'Employee')], default='Employee', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Locked', 'Locked'), ('Pending Activation', 'Pending Activation')], default='Active', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('view_employee_data', 'Can view employee data'), ('add_employee_data', 'Can add employee data'), ('change_employee_data', 'Can change employee data'), ('delete_employee_data', 'Can delete employee data'), ('view_contract', 'Can view contract'), ('add_contract', 'Can add contract'), ('change_contract', 'Can change contract'), ('delete_contract', 'Can delete contract'), ('view_attendance', 'Can view attendance'), ('add_attendance', 'Can add attendance'), ('change_attendance', 'Can change attendance'), ('delete_attendance', 'Can delete attendance'), ('view_salary', 'Can view salary'), ('process_payroll', 'Can process payroll'), ('manage_advances', 'Can manage salary advances'), ('view_training', 'Can view training'), ('add_training', 'Can add training'), ('change_training', 'Can change training'), ('delete_training', 'Can delete training'), ('view_evaluation', 'Can view evaluation'), ('add_evaluation', 'Can add evaluation'), ('change_evaluation', 'Can change evaluation'), ('view_leave', 'Can view leave requests'), ('add_leave', 'Can add leave requests'), ('approve_leave', 'Can approve leave requests'), ('view_reward_discipline', 'Can view rewards and disciplines'), ('add_reward_discipline', 'Can add rewards and disciplines'), ('change_reward_discipline', 'Can change rewards and disciplines'), ('view_reports', 'Can view reports'), ('generate_reports', 'Can generate reports'), ('manage_users', 'Can manage user accounts'), ('assign_permissions', 'Can assign permissions')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=200)),
                ('object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('ip', models.CharField(blank=True, max_length=50, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
